% Calling Functions
% Standard function syntax:
load('myFile.mat', 'y')
% Command syntax:
load myFile.mat y   % no parentheses, and spaces instead of commas

% Calling a function from a script
% [arguments out] = function_name(arguments in)
[V,D] = eig(A);
[~,D] = eig(A);  % if you only want D and not V

% To use functions or scripts, they must be on your path or current directory
path % displays current path
addpath /path/to/dir % add to path
rmpath /path/to/dir % remove from path
cd /path/to/move/into % change directory

% M-file Scripts
% A script file is an external file that contains a sequence of statements.
% They let you avoid repeatedly typing the same code in the Command Window
% Have .m extensions

% M-file Functions
% Like scripts, and have the same .m extension
% But can accept input arguments and return an output
% Also, they have their own workspace (ie. different variable scope).
% Function name should match file name (so save this example as double_input.m).
% 'help double_input.m' returns the comments under line beginning function
function output = double_input(x)
    %double_input(x) returns twice the value of x
    output = 2*x;
end
double_input(6) % ans = 12

% If you want to create a function without creating a new file you can use an
% anonymous function.
% Example that returns the square of it's input, assigned to the handle sqr:
sqr = @(x) x.^2;
sqr(10) % ans = 100
doc function_handle % find out more
